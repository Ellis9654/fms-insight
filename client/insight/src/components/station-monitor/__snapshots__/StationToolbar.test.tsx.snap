// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`displays the load with no queues: load with no queues 1`] = `
<nav
  style={
    Object {
      "alignItems": "flex-end",
      "backgroundColor": "#E0E0E0",
      "display": "flex",
      "height": "2.5em",
      "paddingBottom": "4px",
      "paddingLeft": "24px",
      "paddingRight": "24px",
    }
  }
>
  <div>
    <WithStyles(Select)
      autoWidth={true}
      onChange={[Function]}
      value="StationType_LoadUnload"
    >
      <WithStyles(MenuItem)
        value="StationType_LoadUnload"
      >
        Load Station
      </WithStyles(MenuItem)>
      <WithStyles(MenuItem)
        value="StationType_Insp"
      >
        Inspection
      </WithStyles(MenuItem)>
      <WithStyles(MenuItem)
        value="StationType_Wash"
      >
        Wash
      </WithStyles(MenuItem)>
    </WithStyles(Select)>
    <WithStyles(Input)
      key="loadnumselect"
      onChange={[Function]}
      style={
        Object {
          "marginLeft": "1em",
          "width": "3em",
        }
      }
      type="number"
      value={4}
    />
    <WithStyles(FormControl)
      style={
        Object {
          "marginLeft": "1em",
        }
      }
    >
      <label
        style={
          Object {
            "color": "rgba(0,0,0,0.54)",
            "fontSize": "0.9rem",
            "left": 0,
            "position": "absolute",
            "top": "24px",
          }
        }
      >
        Display queue(s)
      </label>
      <WithStyles(Select)
        displayEmpty={true}
        inputProps={
          Object {
            "id": "queueselect",
          }
        }
        key="queueselect"
        multiple={true}
        onChange={[Function]}
        style={
          Object {
            "minWidth": "10em",
          }
        }
        value={Array []}
      >
        <WithStyles(MenuItem)
          key="@@insight_free_material@@"
          value="@@insight_free_material@@"
        >
          Free Material
        </WithStyles(MenuItem)>
      </WithStyles(Select)>
    </WithStyles(FormControl)>
  </div>
</nav>
`;

exports[`displays the toolbar for all inspection: inspection all toolbar 1`] = `
<nav
  style={
    Object {
      "alignItems": "flex-end",
      "backgroundColor": "#E0E0E0",
      "display": "flex",
      "height": "2.5em",
      "paddingBottom": "4px",
      "paddingLeft": "24px",
      "paddingRight": "24px",
    }
  }
>
  <div>
    <WithStyles(Select)
      autoWidth={true}
      onChange={[Function]}
      value="StationType_Insp"
    >
      <WithStyles(MenuItem)
        value="StationType_LoadUnload"
      >
        Load Station
      </WithStyles(MenuItem)>
      <WithStyles(MenuItem)
        value="StationType_Insp"
      >
        Inspection
      </WithStyles(MenuItem)>
      <WithStyles(MenuItem)
        value="StationType_Wash"
      >
        Wash
      </WithStyles(MenuItem)>
    </WithStyles(Select)>
    <WithStyles(Select)
      key="inspselect"
      onChange={[Function]}
      style={
        Object {
          "marginLeft": "1em",
        }
      }
      value="@@all_inspection_display@@"
    >
      <WithStyles(MenuItem)
        key="@@all_inspection_display@@"
        value="@@all_inspection_display@@"
      >
        <em>
          All
        </em>
      </WithStyles(MenuItem)>
      <WithStyles(MenuItem)
        key="i1"
        value="i1"
      >
        i1
      </WithStyles(MenuItem)>
      <WithStyles(MenuItem)
        key="i2"
        value="i2"
      >
        i2
      </WithStyles(MenuItem)>
    </WithStyles(Select)>
  </div>
</nav>
`;

exports[`displays the toolbar for load with one queue: load with one queue 1`] = `
<nav
  style={
    Object {
      "alignItems": "flex-end",
      "backgroundColor": "#E0E0E0",
      "display": "flex",
      "height": "2.5em",
      "paddingBottom": "4px",
      "paddingLeft": "24px",
      "paddingRight": "24px",
    }
  }
>
  <div>
    <WithStyles(Select)
      autoWidth={true}
      onChange={[Function]}
      value="StationType_LoadUnload"
    >
      <WithStyles(MenuItem)
        value="StationType_LoadUnload"
      >
        Load Station
      </WithStyles(MenuItem)>
      <WithStyles(MenuItem)
        value="StationType_Insp"
      >
        Inspection
      </WithStyles(MenuItem)>
      <WithStyles(MenuItem)
        value="StationType_Wash"
      >
        Wash
      </WithStyles(MenuItem)>
    </WithStyles(Select)>
    <WithStyles(Input)
      key="loadnumselect"
      onChange={[Function]}
      style={
        Object {
          "marginLeft": "1em",
          "width": "3em",
        }
      }
      type="number"
      value={4}
    />
    <WithStyles(FormControl)
      style={
        Object {
          "marginLeft": "1em",
        }
      }
    >
      <WithStyles(Select)
        displayEmpty={true}
        inputProps={
          Object {
            "id": "queueselect",
          }
        }
        key="queueselect"
        multiple={true}
        onChange={[Function]}
        style={
          Object {
            "minWidth": "10em",
          }
        }
        value={
          Array [
            "a",
          ]
        }
      >
        <WithStyles(MenuItem)
          key="@@insight_free_material@@"
          value="@@insight_free_material@@"
        >
          Free Material
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="0"
          value="a"
        >
          a
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="1"
          value="b"
        >
          b
        </WithStyles(MenuItem)>
      </WithStyles(Select)>
    </WithStyles(FormControl)>
  </div>
</nav>
`;

exports[`displays the toolbar for load with three queues: load toolbar 1`] = `
<nav
  style={
    Object {
      "alignItems": "flex-end",
      "backgroundColor": "#E0E0E0",
      "display": "flex",
      "height": "2.5em",
      "paddingBottom": "4px",
      "paddingLeft": "24px",
      "paddingRight": "24px",
    }
  }
>
  <div>
    <WithStyles(Select)
      autoWidth={true}
      onChange={[Function]}
      value="StationType_LoadUnload"
    >
      <WithStyles(MenuItem)
        value="StationType_LoadUnload"
      >
        Load Station
      </WithStyles(MenuItem)>
      <WithStyles(MenuItem)
        value="StationType_Insp"
      >
        Inspection
      </WithStyles(MenuItem)>
      <WithStyles(MenuItem)
        value="StationType_Wash"
      >
        Wash
      </WithStyles(MenuItem)>
    </WithStyles(Select)>
    <WithStyles(Input)
      key="loadnumselect"
      onChange={[Function]}
      style={
        Object {
          "marginLeft": "1em",
          "width": "3em",
        }
      }
      type="number"
      value={4}
    />
    <WithStyles(FormControl)
      style={
        Object {
          "marginLeft": "1em",
        }
      }
    >
      <WithStyles(Select)
        displayEmpty={true}
        inputProps={
          Object {
            "id": "queueselect",
          }
        }
        key="queueselect"
        multiple={true}
        onChange={[Function]}
        style={
          Object {
            "minWidth": "10em",
          }
        }
        value={
          Array [
            "a",
            "b",
            "c",
          ]
        }
      >
        <WithStyles(MenuItem)
          key="@@insight_free_material@@"
          value="@@insight_free_material@@"
        >
          Free Material
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="0"
          value="a"
        >
          a
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="1"
          value="b"
        >
          b
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="2"
          value="c"
        >
          c
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          key="3"
          value="d"
        >
          d
        </WithStyles(MenuItem)>
      </WithStyles(Select)>
    </WithStyles(FormControl)>
  </div>
</nav>
`;

exports[`displays the toolbar for single inspection type: inspection i1 selected toolbar 1`] = `
<nav
  style={
    Object {
      "alignItems": "flex-end",
      "backgroundColor": "#E0E0E0",
      "display": "flex",
      "height": "2.5em",
      "paddingBottom": "4px",
      "paddingLeft": "24px",
      "paddingRight": "24px",
    }
  }
>
  <div>
    <WithStyles(Select)
      autoWidth={true}
      onChange={[Function]}
      value="StationType_Insp"
    >
      <WithStyles(MenuItem)
        value="StationType_LoadUnload"
      >
        Load Station
      </WithStyles(MenuItem)>
      <WithStyles(MenuItem)
        value="StationType_Insp"
      >
        Inspection
      </WithStyles(MenuItem)>
      <WithStyles(MenuItem)
        value="StationType_Wash"
      >
        Wash
      </WithStyles(MenuItem)>
    </WithStyles(Select)>
    <WithStyles(Select)
      key="inspselect"
      onChange={[Function]}
      style={
        Object {
          "marginLeft": "1em",
        }
      }
      value="@@all_inspection_display@@"
    >
      <WithStyles(MenuItem)
        key="@@all_inspection_display@@"
        value="@@all_inspection_display@@"
      >
        <em>
          All
        </em>
      </WithStyles(MenuItem)>
      <WithStyles(MenuItem)
        key="i1"
        value="i1"
      >
        i1
      </WithStyles(MenuItem)>
      <WithStyles(MenuItem)
        key="i2"
        value="i2"
      >
        i2
      </WithStyles(MenuItem)>
    </WithStyles(Select)>
  </div>
</nav>
`;

exports[`displays the toolbar for wash: wash toolbar 1`] = `
<nav
  style={
    Object {
      "alignItems": "flex-end",
      "backgroundColor": "#E0E0E0",
      "display": "flex",
      "height": "2.5em",
      "paddingBottom": "4px",
      "paddingLeft": "24px",
      "paddingRight": "24px",
    }
  }
>
  <div>
    <WithStyles(Select)
      autoWidth={true}
      onChange={[Function]}
      value="StationType_Wash"
    >
      <WithStyles(MenuItem)
        value="StationType_LoadUnload"
      >
        Load Station
      </WithStyles(MenuItem)>
      <WithStyles(MenuItem)
        value="StationType_Insp"
      >
        Inspection
      </WithStyles(MenuItem)>
      <WithStyles(MenuItem)
        value="StationType_Wash"
      >
        Wash
      </WithStyles(MenuItem)>
    </WithStyles(Select)>
  </div>
</nav>
`;
